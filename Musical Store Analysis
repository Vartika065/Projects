Questions and Solutions
### **Basic Questions**  
1. List all the unique genres in the database. 
-- Solution
select distinct genre
from genre;

2. Find the total number of tracks available.
--Solution
select count (*) as total_track
 from track;

3. Retrieve all albums by a specific artist ("name"
"Alanis Morissette").

---Solution 
SELECT a.title AS song_title
FROM track t
JOIN album a ON t.album_id = a.album_id
JOIN artist ar ON a.artist_id = ar.artist_id
WHERE ar.name = 'Alanis Morissette';

---

### **Intermediate Questions**  
4. Get the total duration of tracks in a specific playlist. (90's Music, playlist_id = 5) 

SELECT 
    p.name AS PlaylistName,
    SUM(t.milliseconds) / 1000 AS TotalDurationInSeconds,
    SUM(t.milliseconds) / (1000 * 60) AS TotalDurationInMinutes
FROM 
    playlist p
JOIN 
    playlist_track pt ON p.playlist_id = pt.playlist_id
JOIN 
    track t ON pt.track_id = t.track_id
WHERE 
    p.playlist_id = '5' -- Replace '1' with the desired playlist ID
GROUP BY 
    p.name;

5. Find the top 5 customers who have made the most purchases.

SELECT 
    c.customer_id,
    CONCAT(c.first_name, ' ', c.last_name) AS CustomerName,
    COUNT(i.invoice_id) AS TotalPurchases
FROM 
    customer c
JOIN 
    invoice i ON c.customer_id = i.customer_id
GROUP BY 
    c.customer_id, c.first_name, c.last_name
ORDER BY 
    TotalPurchases DESC
LIMIT 5;
6. List all tracks from an album along with their genre.  
 ---Solution

SELECT 
    t.name AS track_name,
    g.name AS genre_name,
    a.title AS album_title
FROM 
    track t
JOIN 
    album a ON t.album_id = a.album_id
JOIN 
    genre g ON t.genre_id = g.genre_id
WHERE 
    a.title = 'For Those About To Rock We Salute You';
---

### **Advanced Questions**  
7. Find the most popular genre based on the number of tracks sold. 
SELECT 
    g.name AS GenreName,
    COUNT(il.track_id) AS TracksSold
FROM 
    genre g
JOIN 
    track t ON g.genre_id = t.genre_id
JOIN 
    invoice_line il ON t.track_id = il.track_id
GROUP BY 
    g.name
ORDER BY 
    TracksSold DESC
LIMIT 1;
8. Calculate the revenue generated by each employee in processing invoices. 
   SELECT 
    e.employee_id,
    e.first_name,
    e.last_name,
    SUM(il.unit_price * il.quantity) AS revenue
FROM 
    employee e
JOIN 
    customer c ON CAST(e.employee_id AS VARCHAR) = CAST(c.support_rep_id AS VARCHAR)
JOIN 
    invoice i ON c.customer_id = i.customer_id
JOIN 
    invoice_line il ON i.invoice_id = il.invoice_id
GROUP BY 
    e.employee_id, e.first_name, e.last_name
ORDER BY 
    revenue DESC;
9. Find the most frequently purchased track and its total number of purchases. 
solution

SELECT 
    t.name AS track_name,
    COUNT(il.track_id) AS total_purchases
FROM 
    track t
JOIN 
    invoice_line il ON t.track_id = il.track_id
GROUP BY 
    t.track_id, t.name
ORDER BY 
    total_purchases DESC
LIMIT 1;

10. Identify customers who have purchased tracks from more than 3 unique genres.  
solution

SELECT 
    c.customer_id,
    c.first_name || ' ' || c.last_name AS customer_name,
    COUNT(DISTINCT g.genre_id) AS unique_genres
FROM 
    customer c
JOIN 
    invoice i ON c.customer_id = i.customer_id
JOIN 
    invoice_line il ON i.invoice_id = il.invoice_id
JOIN 
    track t ON il.track_id = t.track_id
JOIN 
    genre g ON t.genre_id = g.genre_id
GROUP BY 
    c.customer_id, c.first_name, c.last_name
HAVING 
    COUNT(DISTINCT g.genre_id) > 3
ORDER BY 
    unique_genres DESC;

